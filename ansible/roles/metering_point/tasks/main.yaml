---
- name: Created metering-point bin directory
  ansible.builtin.file:
    path: /opt/metering-point/bin
    recurse: true
    state: directory

- name: Copy hugepages configuration
  ansible.builtin.copy:
    src: "{{ inventory_dir }}/host_files/{{ inventory_hostname }}/hugepages/"
    dest: /etc/ipfixprobe/
    mode: "0755"

- name: DPDK hugepages script is installed
  ansible.builtin.copy:
    src: dpdkhugepages_setup.sh
    dest: /opt/metering-point/bin/dpdkhugepages_setup.sh
    mode: "0755"

- name: DPDK hugepages service is configured
  ansible.builtin.copy:
    src: dpdkhugepages.service
    dest: /usr/lib/systemd/system/dpdkhugepages.service
    mode: "0755"

- name: Create pandda configuration directory
  ansible.builtin.file:
    path: /etc/pandda.d/
    state: directory
    owner: root
    group: root
    mode: "0755"

- name: Upload main pandda configuration file
  ansible.builtin.copy:
    src: "{{ inventory_dir }}/host_files/{{ inventory_hostname }}/pandda.yaml"
    dest: "{{ pandda_conf_path }}pandda.yaml"
    owner: "root"
    group: "root"
    mode: "0644"
    backup: true
    force: true

- name: Create directory /opt/pandda/
  ansible.builtin.file:
    path: /opt/pandda/
    state: directory
    owner: "root"
    group: "root"
    mode: "0755"

- name: Generate ipfixprobe configuration using script  # noqa no-changed-when
  ansible.builtin.command:
    cmd: >
      {{ pandda_conf_executable }} {{ pandda_conf_opt }}/ipfixprobe_conf.py
      {{ pandda_conf_path }}pandda.yaml
      /opt/pandda/instance_ipfixprobe.conf.j2
      /etc/ipfixprobe

- name: Detect ipfixprobe instances
  ansible.builtin.shell: |
    for i in /etc/ipfixprobe/*_*.conf; do
      if [ -e "$i" ]; then
        instance="${i#*_}";
        echo "${instance%.conf}";
      fi
    done
  register: ipfixprobe_instances
  changed_when: true
  ignore_errors: true

- name: Stop ipfixprobe instances
  ansible.builtin.systemd:
    name: "ipfixprobe@instance_{{ item }}.service"
    enabled: true
    state: stopped
  loop: "{{ ipfixprobe_instances.stdout_lines }}"

- name: Detected ipfixprobe instances
  ansible.builtin.debug:
    var: ipfixprobe_instances

- name: Reload systemd service
  ansible.builtin.systemd:
    daemon_reload: true

- name: Restart DPDK hugepages service
  ansible.builtin.systemd:
    name: dpdkhugepages.service
    state: restarted
    enabled: true

- name: Start ipfixprobe instances
  ansible.builtin.systemd:
    name: "ipfixprobe@instance_{{ item }}.service"
    enabled: true
    state: started
  loop: "{{ ipfixprobe_instances.stdout_lines }}"
